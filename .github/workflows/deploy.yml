name: Deploy to AWS ECS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set error flag to false
        run: echo "ERROR_STEP=false" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        if: env.ERROR_STEP != 'true'

      - name: Configure AWS credentials for private ECR
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
        if: env.ERROR_STEP != 'true'

      - name: Login to Amazon ECR (Private)
        uses: aws-actions/amazon-ecr-login@v1
        if: env.ERROR_STEP != 'true'

      # Other steps...

      - name: Create ECS task definition file
        run: |
          cat > ecs-task-def.json <<EOF
          {
            "family": "my-task-family",
            "executionRoleArn": "arn:aws:iam::637423558639:role/ecsTaskExecutionRole",
            "networkMode": "awsvpc",
            "containerDefinitions": [
              {
                "name": "hello-world-container",
                "image": "637423558639.dkr.ecr.ap-south-1.amazonaws.com/hello-world:latest",
                "memory": 512,
                "cpu": 256,
                "essential": true,
                "portMappings": [
                  {
                    "containerPort": 80,
                    "hostPort": 80
                  }
                ]
              }
            ],
            "requiresCompatibilities": [
              "FARGATE"
            ],
            "cpu": "256",
            "memory": "512"
          }
          EOF
        working-directory: ${{ github.workspace }}
        if: env.ERROR_STEP != 'true'

      # Other steps...

      - name: Register ECS Task Definition
        id: register-task-def
        run: |
          TASK_DEFINITION=$(cat ecs-task-def.json)
          echo "$TASK_DEFINITION" | jq .
          REGISTERED_TASK_DEFINITION=$(aws ecs register-task-definition --cli-input-json "$TASK_DEFINITION")
          TASK_DEFINITION_ARN=$(echo $REGISTERED_TASK_DEFINITION | jq -r '.taskDefinition.taskDefinitionArn')
          echo "TASK_DEFINITION_ARN=$TASK_DEFINITION_ARN" >> $GITHUB_ENV
        env:
          AWS_DEFAULT_REGION: us-east-1
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        if: env.ERROR_STEP != 'true'

      # Other steps...

      - name: Deploy to ECS
        if: success() && env.TASK_DEFINITION_ARN != '' && env.ERROR_STEP != 'true'
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ env.TASK_DEFINITION_ARN }}
          service: hello-world-service
          cluster: hello-world-cluster
          wait-for-service-stability: true
        env:
          AWS_DEFAULT_REGION: us-east-1
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
